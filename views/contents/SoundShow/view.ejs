<!DOCTYPE html>
<html lang="ko">
    
    <head>
        <meta charset="utf-8">
        <meta name="viewport" content="width=device-width,initial-scale=1.0,minimum-scale=1.0,maximum-scale=1.0">
        <link rel="shortcut icon" href="/icons/logo3.ico">
        
		<link href="/css/bootstrap.css" rel="stylesheet" type="text/css"/>
		<link rel="stylesheet" href="/css/sunny/jquery-ui-1.10.2.custom.min.css" type="text/css" media="screen" title="no title" charset="utf-8">
		<link href="/color-picker/jquery.colorpicker.css" rel="stylesheet" type="text/css"/>
		<link href="/css/SoundShow/view.css" rel="stylesheet" type="text/css"/>

		<!--script src="/js/require.js"/-->
        <script src="/js/jquery-1.7.1.js"></script>
        <script src="/js/jquery.transit.min.js"></script>
        <!-- <script src="/js/jquery-ui.js"></script>-->	
		<script src="https://ajax.googleapis.com/ajax/libs/jqueryui/1.8.16/jquery-ui.js"></script>
		<script src="/js/google_analytics.js"></script>
        <script src="/js/bootstrap.min.js"></script>
        <script src="/js/underscore.js"></script>
        <script src="/js/SoundShow/soundshow.js"></script>
		<script src="/socket.io/socket.io.js"></script>
		<script src="/color-picker/jquery.colorpicker.js"></script>
		<script src="/color-picker/i18n/jquery.ui.colorpicker-nl.js"></script>
		<script src="/color-picker/swatches/jquery.ui.colorpicker-pantone.js"></script>
		<script src="/color-picker/parts/jquery.ui.colorpicker-rgbslider.js"></script>
		<script src="/js/parse-1.2.7.min.js"></script>
		<script src="/js/SoundShow/app.js"></script>
	    
	    <script type="text/template" id="pattern-template">
			<div class="pattern">
				<span><?=e.type?></span>
				<!--span><?=e.objectId?></span>
				<span><?=e.createdAt?></span-->
				<?=_.template($('#Pattern-' + e.type + '-template').html())({e: JSON.parse(e.data)})?>
				<button class="delete-btn" >delete</button>
			</div>
		</script>
	    <script type="text/template" id="Pattern-FadeTo-template">
			<div class="FadeTo" style="background-color:<?=e.color?>">
				<p class="text-left">t:<?=e.time?></p>
				<p class="text-left">d:<?=e.delay?></p>
			</div>
		</script>
	    <script type="text/template" id="Pattern-RandomBlink-template">
			<div class="RandomBlink">
				<p class="text-left">interval:<?=e.interval?></p>
				<p class="text-left">delay:<?=e.delay?></p>
				<p class="text-left">colors:<?=e.colors&&e.colors.length>0?JSON.stringify(e.colors):"random"?></p>
			</div>
		</script>
		<script type="text/template" id="Pattern-Color-template">
			<div class="Color" style="background-color:<?=e.color?>">
			</div>
		</script>
		<script type="text/template" id="login-template">
	   		<header id="header"></header>
	      	<div class="login">
		        <form class="login-form">
		        	<h2>Log In</h2>
		         	<div class="error" style="display:none"></div>
		         	<input type="text" id="login-username" placeholder="Username" />			 
					<input type="password" id="login-password" placeholder="Password" />
				    <button>Log In</button>
		        </form>
				<form class="signup-form">
		        	<h2>Sign Up</h2>
		        	<div class="error" style="display:none"></div>
		        	<input type="text" id="signup-username" placeholder="Username" />
		        	<input type="password" id="signup-password" placeholder="Create a Password" />
		        	<button>Sign Up</button>
		      	</form>
			</div>
	    </script>
		<script type="text/template" id="track-template">
			<!--div class="track"-->
				<h4><?=e.objectId?></h4>
				<li class="pattern_list">
					<?for(var i=0;i<e.patterns.length;i++){?>
						<? 
							var pattern = e.patterns[i];
							var template = _.template( $("#pattern-template").html() );
						?>
						<ul><?=template({e: pattern})?></ul>
					<?}?>
				</li>
				<button class="btn play-btn">play</button>
			<!--/div-->
		</script>
	    <script type="text/template" id="color-template">
			<div class="color" style="background-color:<?=e.color?>;">
				<div class="overlay">
				</div>
			</div>
		</script>
		
		<script>
		    
			function Pattern(){
				this.colors = [];
				this.t = "single_color";
				this.$div = null;
				this.interval = 10;
			}
			Pattern.prototype = {
				template : _.template($('#pattern-template').html()) ,
				present : function(){
					var self = this;	
					this.$div = $(this.template({e:this}));
					this.$div.find("select").change(function(){
						self.t = $(this).val();
						console.log(self);
					});
					this.$div.find(".play_button").click(function(){
						self.play();
					});
					this.$div.find(".add-color-btn").click(function(){
						$(this).colorpicker({
							showCloseButton  : true ,
							showCancelButton : true ,
							close:function(event, color) {
								self.addColor(new Color("#" + color.formatted));
								//console.log(color);
								
							} 
						});						
					});
					this.$div[0].model = this;
					return this.$div;
				},
				play : function(){
					var colors = [];
					_.each(this.colors,function(c){
						colors.push(c.color);
					});
					var data = {
						t : this.t,
						colors : colors,
						interval : this.interval
					};
					console.log(data);
					socket.emit("screen_color",data);
				},
				addColor : function(color){
					var self = this;
					
					this.colors.push(color);
					var $color = $(color.present());
					$color[0].model = color;

					color.$div = $color;
					// $color.click(function(){
					// 	$(this).colorpicker();
					// })
					console.log($color.find(".overlay"));
					$color.find(".overlay").click(function(){
						self.removeColor(color);
					});
					this.$div.append($color);
				},
				removeColor : function(color){
					if(color.$div) 
						color.$div.remove();
					
					this.colors = _.without(this.colors,color);
				}
			};
			
			
            function connectWS() {
				window.socket = null;
                console.log('Connecting to local server...');
                if (socket == null) {
                    socket = io.connect("/SoundShow");
					socket.on('message', function(data) {
                    });
                    socket.on('disconnect', function() {
					});
                }
                socket.socket.connect();
            }
			
			function get_random_color() {
			    var letters = '0123456789ABCDEF'.split('');
			    var color = '#';
			    for (var i = 0; i < 6; i++ ) {
			        color += letters[Math.round(Math.random() * 15)];
			    }
			    return color;
			}
						
			$(document).ready(function() {
                connectWS();
            	$("body").keydown(function(e){
					console.log(e.keyCode);
					switch(e.keyCode) {
						case 39 : 
							$("#blink_input").val(Number($("#blink_input").val()) + 2); 
							onBlinkIntervalChange($("#blink_input"));
							break;
						case 37 :
							$("#blink_input").val(Number($("#blink_input").val()) - 2); 
							onBlinkIntervalChange($("#blink_input"));
							break;
 				   		case 81 : $(".pattern")[0].model.play(); break; 
						case 87 : $(".pattern")[1].model.play(); break;
						case 69 : $(".pattern")[2].model.play(); break;
						case 82 : $(".pattern")[3].model.play(); break;
						case 84 : $(".pattern")[4].model.play(); break;
 				   	}
					console.log($("#blink_input").val());
            	});
			});

			function stopAll(){
				socket.emit("screen_color",{
					t : "fade_stop"
				});
			}
			function addNewPattern(){
				var pattern = new Pattern();
				pattern.t = "fadeTo";
				$(".pallete").append(pattern.present());
			}
        </script>
        
        <title>Comunicar</title>
    </head>
    <body>
		<header>
			<h1>SoundShow Control Panel</h1>
		</header>
		<div class="container-fluid">
	  		<div class="row-fluid">
	    		<div class="span2">
					<div id="pattern_list">
					
					</div>
					<button class="btn btn-primary btn-large" 
							onclick="addNewPattern();">add New Pattern</button>
			 	</div>
	    		<div class="span10">
					<div class="track_list" id="track_list">
					
					</div>
					<button class = "btn btn-danger btn-large" onclick="stopAll();">stop all</button>
	    		</div>
	  	  </div>
		</div>
		<!-- <div>
		<button onclick="startSendingBlink();">send blink</button>
		<button onclick="sendColor();">send color</button> -->
	</body>
</html>